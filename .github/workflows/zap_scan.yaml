on: 
  push:
  schedule:
    - cron: '0 22 * * *' # Runs at 6 AM GMT+8 every day

jobs:
  zap_scan:
    runs-on: ubuntu-latest
    name: Scan the webapplication
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main
      - name: Check Docker daemon status
        run: |
          sudo systemctl status docker || true
          docker info || true
      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.10.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'https://google-gruyere.appspot.com/359590344817771210252875530455144199549/'
          rules_file_name: '.zap/rules.tsv'
          # cmd_options: '-a'
          # Additional command line options
          # -j   runs the AJAX spider
          # -U   specifies which user to select from the context file
          cmd_options: '-a -j -d -U "test123" -n /zap/wrk/Authentication2.context'

          # cmd_options: '-a -j' --> '-j' is to add ajax spider (good for modern webapps = uses JS, 
          #as ajax spider good for JS (JavaScript)
          # but this resulted in https://www.google.com to be attacked by ZAP = kena sued!!!
      # You can configure to blacklist some websites from being attacked
  # Or ignore certain findings that are insignificant by configuring
# a .tsv file (.zap/rules.tsv)

